var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.6","fields":["title","body"],"fieldVectors":[["title/classes/Project.html",[0,0.337,1,0.457]],["body/classes/Project.html",[0,0.413,1,0.778,2,0.629,3,0.775,4,0.629,5,0.629,6,1.372,7,1.205,8,1.44,9,1.729,10,0.507,11,1.164,12,3.389,13,1.665,14,2.172,15,2.059,16,1.6,17,3.389,18,2.059,19,1.133,20,1.398,21,3.389,22,1.088,23,1.665,24,2.172,25,2.587,26,1.164,27,1.553,28,1.809,29,2.845,30,2.845,31,2.845,32,1.058,33,0.085,34,1.748,35,1.639,36,1.321,37,1.386,38,2.087,39,1.578,40,1.26,41,1.247,42,1.813,43,1.553,44,1.553,45,1.164,46,1.865,47,1.576,48,1.578,49,1.813,50,1.44,51,1.578,52,1.578,53,1.578,54,2.37,55,1.578,56,0.805,57,2.37,58,1.578,59,0.507,60,1.164,61,1.164,62,1.809,63,2.37,64,1.809,65,1.164,66,1.164,67,2.37,68,1.921,69,3.162,70,2.37,71,2.37,72,1.164,73,1.164,74,0.604,75,1.164,76,1.164,77,1.164,78,1.164,79,1.164,80,1.164,81,1.164,82,1.164,83,0.944,84,0.944,85,0.944,86,1.578,87,1.578,88,1.398,89,1.578,90,1.578,91,1.578,92,1.578,93,1.578,94,0.775,95,1.578,96,1.578,97,1.578,98,1.578,99,1.578,100,1.578,101,1.35,102,0.959,103,0.959,104,0.959,105,0.959,106,0.629,107,0.629,108,0.775,109,0.775,110,2.845,111,0.959,112,0.629,113,0.775,114,0.775,115,1.44,116,1.205,117,2.172,118,1.44,119,1.578,120,1.35,121,1.578,122,1.578,123,1.578,124,1.578,125,0.959,126,0.029,127,0.043,128,0.029]],["title/classes/Status.html",[0,0.337,56,0.592]],["body/classes/Status.html",[0,0.487,1,0.575,2,0.841,3,1.037,4,0.841,5,0.841,6,1.319,8,1.776,9,2.037,10,0.678,11,1.436,13,1.867,16,1.699,19,1.336,20,1.647,22,1.22,23,1.867,26,1.436,27,1.778,32,1.001,33,0.084,34,1.436,35,1.566,36,1.262,37,1.355,38,1.98,40,1.442,41,1.339,42,1.647,43,1.778,44,1.778,45,1.436,46,1.778,47,1.566,56,1.076,59,0.678,60,1.436,61,1.436,65,1.436,66,1.436,72,1.436,73,1.436,74,0.745,75,1.436,76,1.436,77,1.436,78,1.436,79,1.436,80,1.436,81,1.436,82,1.436,83,1.164,84,1.164,85,1.164,88,1.647,94,1.037,101,1.442,103,1.283,104,1.283,106,0.841,107,0.841,108,1.037,109,1.037,111,1.283,112,0.841,113,1.037,114,1.037,115,1.776,120,0.841,125,1.283,126,0.038,127,0.053,128,0.038,129,1.612,130,2.309,131,2.111,132,2.111,133,2.111,134,2.232,135,1.776,136,2.111,137,2.111,138,2.111,139,2.111]],["title/classes/StatusWithProject.html",[0,0.337,140,1.412]],["body/classes/StatusWithProject.html",[0,0.437,1,0.838,2,0.877,3,1.081,4,0.877,5,0.877,6,1.1,10,0.707,11,1.478,13,1.684,16,1.586,19,1.536,20,1.895,22,1.1,23,1.684,26,1.478,27,1.684,32,1.072,33,0.084,34,1.081,35,1.653,36,1.332,37,1.308,38,2.068,40,1.198,41,1.238,42,1.81,43,1.478,44,1.478,45,1.478,46,1.81,47,1.467,50,1.337,56,1.123,59,0.707,60,1.081,61,1.081,65,1.081,66,1.081,72,1.081,73,1.081,74,0.561,75,1.081,76,1.684,77,1.081,78,1.081,79,1.081,80,1.081,81,1.081,82,1.081,83,0.877,84,0.877,85,0.877,88,1.081,94,1.081,101,1.467,102,1.337,105,1.337,106,0.877,107,0.877,108,1.081,109,1.081,114,1.081,118,1.337,126,0.04,127,0.055,128,0.04,130,2.083,134,1.68,135,1.337,140,1.828,141,2.617,142,1.68,143,3.008,144,2.201,145,3.008,146,2.201,147,4.076,148,2.201,149,2.201,150,2.201,151,2.201,152,2.201,153,2.201,154,2.201,155,1.68]],["title/classes/Task.html",[0,0.337,156,0.925]],["body/classes/Task.html",[0,0.389,1,0.743,2,0.57,3,0.703,4,0.57,5,0.57,6,1.332,8,1.336,9,1.628,10,0.459,11,1.08,13,1.594,14,2.477,15,1.972,16,1.563,19,1.067,20,1.316,22,1.041,23,1.594,24,2.477,26,1.08,27,1.477,28,1.679,32,1.038,33,0.085,34,1.08,35,1.606,36,1.294,37,1.39,38,2.021,40,1.504,41,1.321,42,1.894,43,1.809,44,1.809,45,1.477,46,2.067,47,1.712,49,1.98,50,1.628,56,0.962,59,0.459,60,1.08,61,1.08,62,1.679,65,1.477,66,1.477,72,1.08,73,1.08,74,0.56,75,1.08,76,1.08,77,1.08,78,1.08,79,1.08,80,1.08,81,1.08,82,1.08,83,0.876,84,0.876,85,0.876,88,1.594,94,0.703,101,1.421,102,0.869,103,0.869,104,0.869,105,0.869,106,0.57,107,0.57,108,0.703,109,0.703,111,0.869,112,0.57,113,0.703,114,0.703,115,1.827,116,1.092,117,2.045,118,1.972,120,0.57,125,0.869,126,0.026,127,0.04,128,0.026,135,1.336,155,1.092,156,1.536,157,1.092,158,3.245,159,3.245,160,3.245,161,2.477,162,1.43,163,1.43,164,1.43,165,1.43,166,1.43,167,1.43,168,1.43,169,2.199,170,1.43,171,1.43,172,2.199,173,2.199,174,3.006,175,1.336,176,2.199,177,1.43,178,1.43,179,1.43,180,1.43,181,1.43,182,1.43,183,1.43,184,1.43,185,1.092,186,1.43,187,1.43,188,3.006,189,2.678,190,3.006,191,1.43,192,1.43,193,1.43,194,1.43]],["title/changelog.html",[195,1.194,196,1.194,197,1.965]],["body/changelog.html",[1,0.64,4,0.574,18,0.876,22,0.462,32,0.367,33,0.059,36,0.462,37,0.462,40,0.881,41,0.462,49,0.708,68,0.876,74,0.829,101,0.574,106,0.574,112,0.574,120,0.574,126,0.026,127,0.04,128,0.026,156,0.574,161,1.1,175,0.876,198,1.441,199,2.691,200,2.691,201,3.785,202,4.365,203,4.365,204,3.145,205,2.691,206,1.441,207,1.441,208,2.691,209,2.211,210,1.441,211,2.691,212,1.441,213,2.211,214,1.441,215,1.441,216,1.441,217,1.441,218,1.441,219,1.441,220,1.441,221,3.361,222,2.56,223,1.441,224,1.441,225,1.441,226,1.441,227,1.441,228,3.018,229,1.441,230,1.441,231,1.441,232,1.441,233,1.441,234,1.441,235,1.441,236,3.577,237,2.691,238,1.441,239,3.785,240,3.988,241,1.441,242,1.1,243,3.255,244,2.211,245,1.688,246,2.211,247,1.441,248,1.1,249,1.441,250,1.441,251,1.441,252,3.988,253,1.441,254,2.211,255,1.441,256,2.211,257,1.441,258,1.441,259,2.691,260,2.211,261,3.018,262,2.691,263,2.691,264,1.441,265,1.441,266,1.441,267,1.441,268,1.441,269,1.441,270,1.1,271,3.018,272,2.691,273,1.441,274,1.441,275,1.441,276,3.577,277,2.211,278,2.211,279,1.441,280,1.441,281,1.441,282,1.688,283,1.441,284,1.441,285,2.691,286,1.441,287,2.211,288,1.441,289,1.1,290,1.441,291,1.441,292,2.211,293,2.691,294,1.441,295,1.688,296,2.691,297,1.441,298,1.441,299,1.441,300,3.253,301,1.441,302,2.211,303,1.441,304,2.054,305,1.441,306,3.436,307,2.691,308,1.441,309,1.441,310,2.691,311,2.211,312,1.441,313,1.441,314,1.1,315,2.211,316,2.691,317,2.211,318,1.441,319,3.018,320,1.441,321,1.441,322,1.441,323,1.441,324,1.441,325,1.441,326,1.441,327,1.441,328,2.211,329,2.691,330,1.441,331,1.441,332,1.441,333,3.018,334,1.441,335,3.436,336,1.441,337,1.441,338,1.441,339,1.441,340,1.441,341,1.441,342,1.441,343,1.441,344,2.211,345,1.688,346,1.441,347,1.441,348,1.441,349,1.1,350,1.441,351,1.441,352,1.441,353,1.441,354,1.441,355,1.441,356,1.1,357,1.441,358,1.441,359,1.441,360,1.441,361,1.441,362,1.441,363,1.441,364,1.441,365,1.441,366,1.441,367,1.441,368,3.255,369,1.441,370,1.441,371,2.211,372,1.441,373,0.876,374,1.441,375,1.441,376,1.441,377,1.441,378,1.441,379,2.211,380,2.211,381,2.304,382,1.441,383,1.441,384,2.211,385,1.441,386,1.441,387,2.211,388,1.441,389,1.441,390,1.441,391,1.441,392,2.211,393,2.211,394,1.441,395,1.441,396,1.441,397,3.018,398,1.441,399,1.441,400,2.211,401,1.688,402,1.441,403,1.441,404,1.441,405,1.441,406,1.441,407,1.441,408,1.441,409,1.441,410,1.441,411,1.441,412,1.441,413,1.441,414,1.441,415,1.441,416,1.441,417,1.441,418,2.211,419,2.054,420,1.441,421,1.688,422,1.441,423,1.441,424,1.441,425,1.441,426,1.441,427,2.211,428,1.441,429,1.441,430,1.441,431,1.441,432,1.441,433,1.441,434,1.441,435,2.211,436,1.441,437,1.441,438,1.441,439,1.441,440,1.441,441,2.211,442,1.441,443,1.441,444,1.441,445,1.441,446,1.441,447,2.211,448,1.441,449,1.441,450,1.441,451,1.441,452,1.441,453,1.441]],["title/coverage.html",[454,2.382]],["body/coverage.html",[0,0.595,1,0.569,5,1.153,6,1.447,7,2.209,32,0.737,33,0.083,56,0.737,74,0.737,126,0.053,127,0.065,128,0.053,129,2.209,140,1.758,141,2.209,142,2.209,156,1.153,157,2.209,454,2.209,455,1.758,456,2.893,457,2.893,458,2.209,459,4.398,460,2.209,461,4.51,462,4.398,463,2.209,464,2.209,465,2.746,466,2.209,467,2.209,468,2.746,469,2.209,470,2.209,471,2.746,472,2.209,473,2.209,474,3.596,475,2.893,476,2.893,477,2.893,478,2.893]],["title/dependencies.html",[222,1.69,479,1.965]],["body/dependencies.html",[33,0.085,59,0.808,107,1.002,112,1.703,113,1.236,126,0.046,127,0.06,128,0.046,185,1.921,222,1.529,242,1.921,270,1.921,289,1.921,314,1.921,345,1.921,480,2.516,481,4.363,482,2.516,483,2.516,484,2.516,485,2.516,486,2.516,487,3.666,488,3.29,489,3.29,490,1.921,491,2.516,492,2.516,493,2.516,494,2.516,495,3.666,496,2.512,497,2.516,498,3.29,499,2.516,500,3.29,501,3.29,502,2.516,503,2.516,504,2.516,505,3.29,506,2.516,507,2.516,508,2.516,509,3.666,510,2.516,511,2.516,512,2.516,513,2.516,514,3.29,515,2.516,516,2.516,517,2.516,518,2.516,519,2.516,520,2.516,521,2.516,522,2.516,523,2.516,524,2.516,525,3.29,526,2.516,527,3.29,528,2.516,529,2.516,530,2.516,531,2.516,532,2.516,533,2.516,534,2.516,535,2.516,536,2.516,537,2.516,538,2.516,539,2.516,540,2.516,541,2.516,542,2.516,543,2.516,544,2.516,545,2.516,546,2.516,547,2.516,548,2.516,549,2.516,550,2.516,551,2.516,552,2.516,553,2.516,554,2.516,555,2.516,556,2.516,557,2.516,558,2.516,559,2.516]],["title/index.html",[10,0.631,195,1.194,196,1.194]],["body/index.html",[19,1.26,33,0.069,126,0.057,127,0.069,128,0.057,245,2.9,248,2.415,282,2.415,295,2.9,349,2.415,356,3.107,381,2.9,401,2.415,419,2.9,455,2.473,490,2.415,496,3.107,560,3.798,561,3.164,562,3.164,563,3.164,564,3.164,565,3.164,566,3.164,567,3.164,568,3.798,569,3.164,570,3.164,571,3.164,572,3.164,573,3.164,574,3.164,575,3.164,576,3.164,577,3.164,578,3.164,579,3.164,580,3.164,581,3.164,582,3.164,583,3.164,584,3.798,585,1.922,586,2.415]],["title/license.html",[195,1.194,196,1.194,585,1.194]],["body/license.html",[33,0.065,126,0.053,127,0.065,128,0.053,300,2.218,304,2.218,421,2.753,455,1.765,585,1.765,586,2.753,587,3.921,588,2.905,589,3.606,590,2.905,591,2.905,592,2.905,593,2.905,594,2.905,595,2.905,596,3.606,597,4.438,598,2.905,599,2.905,600,3.921,601,2.905,602,3.606,603,2.905,604,2.905,605,2.905,606,2.905,607,2.905,608,2.905,609,2.905,610,2.905,611,2.905,612,3.606,613,2.905,614,2.905,615,2.905,616,2.905,617,2.905,618,2.905,619,2.905,620,3.606,621,3.606,622,2.905,623,2.905,624,2.905,625,2.905,626,2.905,627,2.905,628,2.905,629,2.905,630,2.905,631,2.905,632,2.905,633,2.905,634,2.905,635,2.905,636,2.905,637,2.905,638,2.905,639,2.905,640,2.905,641,2.905,642,2.905,643,2.905,644,2.905,645,2.218,646,2.905,647,2.905,648,2.905,649,2.905,650,2.905,651,2.905,652,2.905]],["title/modules.html",[373,1.896]],["body/modules.html",[33,0.074,126,0.065,127,0.074,128,0.065,373,2.18]],["title/overview.html",[653,2.382]],["body/overview.html",[2,1.422,33,0.074,126,0.065,127,0.074,128,0.065,653,2.726,654,3.57]],["title/miscellaneous/variables.html",[655,1.5,656,2.123]],["body/miscellaneous/variables.html",[1,0.724,6,1.083,10,0.502,15,0.949,16,1.709,18,1.429,22,0.502,25,1.193,32,0.964,33,0.085,35,1.508,36,1.215,37,0.908,41,0.908,47,1.412,49,1.389,56,0.937,59,0.502,64,1.193,68,1.718,74,0.72,83,1.126,84,1.126,85,1.412,120,1.617,126,0.028,127,0.043,128,0.028,130,1.912,156,1.465,175,0.949,204,2.159,221,2.159,458,1.193,460,1.795,463,1.193,464,1.795,465,1.193,466,2.159,467,2.159,468,1.193,469,2.159,470,2.159,471,1.193,472,2.159,473,2.159,645,3.1,655,1.193,656,1.193,657,2.351,658,2.351,659,2.351,660,1.562,661,1.562,662,2.827,663,2.827,664,1.562,665,2.827,666,3.545,667,3.545,668,2.827,669,2.827,670,2.827,671,4.182,672,3.545,673,2.827,674,2.827,675,2.351,676,3.873,677,1.562,678,1.562,679,2.827,680,2.827,681,2.827,682,2.827,683,2.827,684,2.827,685,2.827,686,2.827,687,2.827,688,2.827,689,2.827,690,1.562,691,2.351,692,1.562,693,1.562,694,1.562,695,2.351,696,1.562,697,1.562,698,1.562,699,1.562,700,2.827,701,2.827,702,2.351,703,2.351,704,1.562,705,1.562,706,1.562,707,1.562,708,1.562]]],"invertedIndex":[["",{"_index":33,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["0.1.0",{"_index":443,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":442,"title":{},"body":{"changelog.html":{}}}],["0.1.10",{"_index":366,"title":{},"body":{"changelog.html":{}}}],["0.1.2",{"_index":440,"title":{},"body":{"changelog.html":{}}}],["0.1.3",{"_index":439,"title":{},"body":{"changelog.html":{}}}],["0.1.4",{"_index":416,"title":{},"body":{"changelog.html":{}}}],["0.1.5",{"_index":414,"title":{},"body":{"changelog.html":{}}}],["0.1.6",{"_index":396,"title":{},"body":{"changelog.html":{}}}],["0.1.7",{"_index":391,"title":{},"body":{"changelog.html":{}}}],["0.1.8",{"_index":383,"title":{},"body":{"changelog.html":{}}}],["0.1.9",{"_index":378,"title":{},"body":{"changelog.html":{}}}],["0.11.0",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["0.11.4",{"_index":550,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":359,"title":{},"body":{"changelog.html":{}}}],["0.2.1",{"_index":353,"title":{},"body":{"changelog.html":{}}}],["0.2.2",{"_index":351,"title":{},"body":{"changelog.html":{}}}],["0.2.3",{"_index":343,"title":{},"body":{"changelog.html":{}}}],["0.2.4",{"_index":337,"title":{},"body":{"changelog.html":{}}}],["0.2.5",{"_index":327,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":314,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.3.1",{"_index":309,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":299,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":284,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":274,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":270,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.6.3",{"_index":546,"title":{},"body":{"dependencies.html":{}}}],["0.6.5",{"_index":559,"title":{},"body":{"dependencies.html":{}}}],["0.8.29",{"_index":557,"title":{},"body":{"dependencies.html":{}}}],["0.9.0",{"_index":544,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":462,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":475,"title":{},"body":{"coverage.html":{}}}],["0/15",{"_index":474,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":476,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":271,"title":{},"body":{"changelog.html":{}}}],["02",{"_index":233,"title":{},"body":{"changelog.html":{}}}],["03",{"_index":200,"title":{},"body":{"changelog.html":{}}}],["0394bcc",{"_index":231,"title":{},"body":{"changelog.html":{}}}],["04",{"_index":379,"title":{},"body":{"changelog.html":{}}}],["05",{"_index":259,"title":{},"body":{"changelog.html":{}}}],["06",{"_index":228,"title":{},"body":{"changelog.html":{}}}],["07",{"_index":310,"title":{},"body":{"changelog.html":{}}}],["09",{"_index":243,"title":{},"body":{"changelog.html":{}}}],["1.0.2",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["1.11.1",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["1.11.3",{"_index":538,"title":{},"body":{"dependencies.html":{}}}],["1.2.15",{"_index":497,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":201,"title":{},"body":{"changelog.html":{}}}],["10.12.18",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":237,"title":{},"body":{"changelog.html":{}}}],["11.0.1",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["12",{"_index":285,"title":{},"body":{"changelog.html":{}}}],["13",{"_index":328,"title":{},"body":{"changelog.html":{}}}],["14",{"_index":301,"title":{},"body":{"changelog.html":{}}}],["15",{"_index":360,"title":{},"body":{"changelog.html":{}}}],["16",{"_index":260,"title":{},"body":{"changelog.html":{}}}],["17",{"_index":238,"title":{},"body":{"changelog.html":{}}}],["176",{"_index":226,"title":{},"body":{"changelog.html":{}}}],["19",{"_index":392,"title":{},"body":{"changelog.html":{}}}],["1acf96b",{"_index":210,"title":{},"body":{"changelog.html":{}}}],["2.0.0",{"_index":266,"title":{},"body":{"changelog.html":{}}}],["2.0.1",{"_index":258,"title":{},"body":{"changelog.html":{}}}],["2.1.0",{"_index":242,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["2.2.0",{"_index":235,"title":{},"body":{"changelog.html":{}}}],["2.3.0",{"_index":549,"title":{},"body":{"dependencies.html":{}}}],["2.6.5",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["2.8.5",{"_index":533,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":315,"title":{},"body":{"changelog.html":{}}}],["2017",{"_index":300,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["2018",{"_index":236,"title":{},"body":{"changelog.html":{}}}],["2019",{"_index":199,"title":{},"body":{"changelog.html":{}}}],["23",{"_index":352,"title":{},"body":{"changelog.html":{}}}],["27",{"_index":244,"title":{},"body":{"changelog.html":{}}}],["28",{"_index":344,"title":{},"body":{"changelog.html":{}}}],["29",{"_index":272,"title":{},"body":{"changelog.html":{}}}],["293b49d",{"_index":437,"title":{},"body":{"changelog.html":{}}}],["2a4e754",{"_index":355,"title":{},"body":{"changelog.html":{}}}],["2cd33ba",{"_index":342,"title":{},"body":{"changelog.html":{}}}],["2dae41f",{"_index":206,"title":{},"body":{"changelog.html":{}}}],["2df26d9",{"_index":395,"title":{},"body":{"changelog.html":{}}}],["3.0.0",{"_index":232,"title":{},"body":{"changelog.html":{}}}],["3.0.1",{"_index":227,"title":{},"body":{"changelog.html":{}}}],["3.0.2",{"_index":198,"title":{},"body":{"changelog.html":{}}}],["3.2.0",{"_index":539,"title":{},"body":{"dependencies.html":{}}}],["3.9.8",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["30",{"_index":338,"title":{},"body":{"changelog.html":{}}}],["306b1dc",{"_index":367,"title":{},"body":{"changelog.html":{}}}],["32cc0ca",{"_index":308,"title":{},"body":{"changelog.html":{}}}],["3377e7c",{"_index":320,"title":{},"body":{"changelog.html":{}}}],["38e751b",{"_index":377,"title":{},"body":{"changelog.html":{}}}],["3d5dc7c",{"_index":269,"title":{},"body":{"changelog.html":{}}}],["4",{"_index":654,"title":{},"body":{"overview.html":{}}}],["451d4dc",{"_index":273,"title":{},"body":{"changelog.html":{}}}],["5",{"_index":668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.0.2",{"_index":325,"title":{},"body":{"changelog.html":{}}}],["5.1.0",{"_index":312,"title":{},"body":{"changelog.html":{}}}],["5.3.3",{"_index":555,"title":{},"body":{"dependencies.html":{}}}],["5.7.2",{"_index":501,"title":{},"body":{"dependencies.html":{}}}],["518ab9b",{"_index":453,"title":{},"body":{"changelog.html":{}}}],["53ae546",{"_index":418,"title":{},"body":{"changelog.html":{}}}],["5ba6971",{"_index":220,"title":{},"body":{"changelog.html":{}}}],["6.0.5",{"_index":545,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["6.2.0",{"_index":535,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":553,"title":{},"body":{"dependencies.html":{}}}],["688bb7a",{"_index":217,"title":{},"body":{"changelog.html":{}}}],["6b489b6",{"_index":407,"title":{},"body":{"changelog.html":{}}}],["6ce4333",{"_index":283,"title":{},"body":{"changelog.html":{}}}],["7.0.0",{"_index":511,"title":{},"body":{"dependencies.html":{}}}],["7.1.1",{"_index":505,"title":{},"body":{"dependencies.html":{}}}],["7.2.8",{"_index":481,"title":{},"body":{"dependencies.html":{}}}],["78187d5",{"_index":386,"title":{},"body":{"changelog.html":{}}}],["7ecd3f3",{"_index":251,"title":{},"body":{"changelog.html":{}}}],["7f3f666",{"_index":413,"title":{},"body":{"changelog.html":{}}}],["8.3.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["8.4.0",{"_index":537,"title":{},"body":{"dependencies.html":{}}}],["886b928",{"_index":364,"title":{},"body":{"changelog.html":{}}}],["8adbe04",{"_index":326,"title":{},"body":{"changelog.html":{}}}],["8b85b95",{"_index":298,"title":{},"body":{"changelog.html":{}}}],["8eef549",{"_index":234,"title":{},"body":{"changelog.html":{}}}],["92e88dd",{"_index":374,"title":{},"body":{"changelog.html":{}}}],["951fc8c",{"_index":257,"title":{},"body":{"changelog.html":{}}}],["9cb0c6a",{"_index":264,"title":{},"body":{"changelog.html":{}}}],["9cb1082",{"_index":229,"title":{},"body":{"changelog.html":{}}}],["9cc33b0",{"_index":424,"title":{},"body":{"changelog.html":{}}}],["9df5cd7",{"_index":436,"title":{},"body":{"changelog.html":{}}}],["a3b781a",{"_index":451,"title":{},"body":{"changelog.html":{}}}],["a850406",{"_index":358,"title":{},"body":{"changelog.html":{}}}],["a989aa0",{"_index":281,"title":{},"body":{"changelog.html":{}}}],["ab3f64f",{"_index":428,"title":{},"body":{"changelog.html":{}}}],["above",{"_index":619,"title":{},"body":{"license.html":{}}}],["accessors",{"_index":28,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["action",{"_index":645,"title":{},"body":{"license.html":{},"miscellaneous/variables.html":{}}}],["actionoptions",{"_index":669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ad58510",{"_index":313,"title":{},"body":{"changelog.html":{}}}],["add",{"_index":204,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["allow",{"_index":318,"title":{},"body":{"changelog.html":{}}}],["alternative",{"_index":219,"title":{},"body":{"changelog.html":{}}}],["and/or",{"_index":610,"title":{},"body":{"license.html":{}}}],["angular",{"_index":311,"title":{},"body":{"changelog.html":{}}}],["angular/animations",{"_index":480,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":482,"title":{},"body":{"dependencies.html":{}}}],["angular/compiler",{"_index":483,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":484,"title":{},"body":{"dependencies.html":{}}}],["angular/forms",{"_index":485,"title":{},"body":{"dependencies.html":{}}}],["angular/http",{"_index":486,"title":{},"body":{"dependencies.html":{}}}],["angular/platform",{"_index":487,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":491,"title":{},"body":{"dependencies.html":{}}}],["angular7",{"_index":562,"title":{},"body":{"index.html":{}}}],["aot",{"_index":397,"title":{},"body":{"changelog.html":{}}}],["app",{"_index":295,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["application",{"_index":560,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":370,"title":{},"body":{"changelog.html":{}}}],["arising",{"_index":649,"title":{},"body":{"license.html":{}}}],["arr",{"_index":187,"title":{},"body":{"classes/Task.html":{}}}],["arr.push",{"_index":190,"title":{},"body":{"classes/Task.html":{}}}],["array",{"_index":280,"title":{},"body":{"changelog.html":{}}}],["assigned",{"_index":708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["assigneduser",{"_index":158,"title":{},"body":{"classes/Task.html":{}}}],["associated",{"_index":598,"title":{},"body":{"license.html":{}}}],["attribute",{"_index":403,"title":{},"body":{"changelog.html":{}}}],["authors",{"_index":638,"title":{},"body":{"license.html":{}}}],["autoload",{"_index":665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b0cb981",{"_index":365,"title":{},"body":{"changelog.html":{}}}],["b2c8cf0",{"_index":255,"title":{},"body":{"changelog.html":{}}}],["b2c98ef",{"_index":390,"title":{},"body":{"changelog.html":{}}}],["b5dc067",{"_index":334,"title":{},"body":{"changelog.html":{}}}],["b8f7c88",{"_index":350,"title":{},"body":{"changelog.html":{}}}],["backend",{"_index":250,"title":{},"body":{"changelog.html":{}}}],["based",{"_index":563,"title":{},"body":{"index.html":{}}}],["bind",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["boolean",{"_index":54,"title":{},"body":{"classes/Project.html":{}}}],["bootstrap",{"_index":289,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["brands",{"_index":499,"title":{},"body":{"dependencies.html":{}}}],["browser",{"_index":488,"title":{},"body":{"dependencies.html":{}}}],["bug",{"_index":202,"title":{},"body":{"changelog.html":{}}}],["build",{"_index":387,"title":{},"body":{"changelog.html":{}}}],["builder",{"_index":543,"title":{},"body":{"dependencies.html":{}}}],["c",{"_index":588,"title":{},"body":{"license.html":{}}}],["c32a9e5",{"_index":324,"title":{},"body":{"changelog.html":{}}}],["call",{"_index":339,"title":{},"body":{"changelog.html":{}}}],["cc8b3bf",{"_index":405,"title":{},"body":{"changelog.html":{}}}],["cd",{"_index":567,"title":{},"body":{"index.html":{}}}],["change",{"_index":252,"title":{},"body":{"changelog.html":{}}}],["changelog",{"_index":197,"title":{"changelog.html":{}},"body":{}}],["charge",{"_index":593,"title":{},"body":{"license.html":{}}}],["check",{"_index":205,"title":{},"body":{"changelog.html":{}}}],["circular",{"_index":434,"title":{},"body":{"changelog.html":{}}}],["claim",{"_index":641,"title":{},"body":{"license.html":{}}}],["class",{"_index":0,"title":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"coverage.html":{}}}],["classes",{"_index":2,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"overview.html":{}}}],["clone",{"_index":565,"title":{},"body":{"index.html":{}}}],["close",{"_index":707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["closeat",{"_index":159,"title":{},"body":{"classes/Task.html":{}}}],["code",{"_index":335,"title":{},"body":{"changelog.html":{}}}],["command",{"_index":389,"title":{},"body":{"changelog.html":{}}}],["completed",{"_index":704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["completedtaskscount",{"_index":12,"title":{},"body":{"classes/Project.html":{}}}],["compodoc",{"_index":581,"title":{},"body":{"index.html":{}}}],["components",{"_index":290,"title":{},"body":{"changelog.html":{}}}],["conditions",{"_index":618,"title":{},"body":{"license.html":{}}}],["configs",{"_index":212,"title":{},"body":{"changelog.html":{}}}],["connection",{"_index":651,"title":{},"body":{"license.html":{}}}],["const",{"_index":186,"title":{},"body":{"classes/Task.html":{}}}],["contract",{"_index":646,"title":{},"body":{"license.html":{}}}],["cookie",{"_index":540,"title":{},"body":{"dependencies.html":{}}}],["copies",{"_index":612,"title":{},"body":{"license.html":{}}}],["copy",{"_index":596,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":587,"title":{},"body":{"license.html":{}}}],["core",{"_index":496,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["core/src/i18n/ru.i18n.ts",{"_index":458,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/lib/configs/index.ts",{"_index":463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/lib/configs/projects.config.ts",{"_index":465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/lib/configs/statuses.config.ts",{"_index":468,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/lib/configs/tasks.config.ts",{"_index":471,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["core/src/lib/models/project.ts",{"_index":7,"title":{},"body":{"classes/Project.html":{},"coverage.html":{}}}],["core/src/lib/models/project.ts:15",{"_index":86,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:35",{"_index":53,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:37",{"_index":39,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:39",{"_index":87,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:42",{"_index":89,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:44",{"_index":52,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:46",{"_index":55,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:50",{"_index":48,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:54",{"_index":90,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:58",{"_index":58,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:62",{"_index":92,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:66",{"_index":51,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:70",{"_index":91,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:72",{"_index":96,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:80",{"_index":98,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:84",{"_index":100,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/project.ts:88",{"_index":93,"title":{},"body":{"classes/Project.html":{}}}],["core/src/lib/models/status",{"_index":141,"title":{},"body":{"classes/StatusWithProject.html":{},"coverage.html":{}}}],["core/src/lib/models/status.ts",{"_index":129,"title":{},"body":{"classes/Status.html":{},"coverage.html":{}}}],["core/src/lib/models/status.ts:22",{"_index":132,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:25",{"_index":133,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:27",{"_index":137,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:31",{"_index":131,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:35",{"_index":138,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:37",{"_index":139,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/status.ts:7",{"_index":136,"title":{},"body":{"classes/Status.html":{}}}],["core/src/lib/models/task.ts",{"_index":157,"title":{},"body":{"classes/Task.html":{},"coverage.html":{}}}],["core/src/lib/models/task.ts:17",{"_index":177,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:39",{"_index":167,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:44",{"_index":170,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:47",{"_index":178,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:49",{"_index":166,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:54",{"_index":171,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:58",{"_index":168,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:62",{"_index":163,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:66",{"_index":164,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:70",{"_index":179,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:74",{"_index":165,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:78",{"_index":180,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:82",{"_index":162,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:84",{"_index":181,"title":{},"body":{"classes/Task.html":{}}}],["core/src/lib/models/task.ts:88",{"_index":183,"title":{},"body":{"classes/Task.html":{}}}],["correct",{"_index":408,"title":{},"body":{"changelog.html":{}}}],["cors",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["coverage",{"_index":454,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createdat",{"_index":13,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["createduser",{"_index":14,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["createtitle",{"_index":72,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["cur_page",{"_index":687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":294,"title":{},"body":{"changelog.html":{}}}],["d6fc719",{"_index":438,"title":{},"body":{"changelog.html":{}}}],["daf1b45",{"_index":223,"title":{},"body":{"changelog.html":{}}}],["damages",{"_index":642,"title":{},"body":{"license.html":{}}}],["data",{"_index":671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body",{"_index":676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.meta",{"_index":681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.meta.totalresults",{"_index":682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.project",{"_index":678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.projects",{"_index":677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.status",{"_index":693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.statuses",{"_index":692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.task",{"_index":697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data.body.tasks",{"_index":696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":40,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{}}}],["datetime",{"_index":184,"title":{},"body":{"classes/Task.html":{}}}],["datetime.fromiso(string(this.openat",{"_index":192,"title":{},"body":{"classes/Task.html":{}}}],["datetime.fromjsdate(this.openat",{"_index":193,"title":{},"body":{"classes/Task.html":{}}}],["dbcc081",{"_index":404,"title":{},"body":{"changelog.html":{}}}],["deal",{"_index":599,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":652,"title":{},"body":{"license.html":{}}}],["decorators",{"_index":42,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["default",{"_index":35,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["default_projects_config",{"_index":466,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_statuses_config",{"_index":469,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["default_tasks_config",{"_index":472,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":38,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["delete",{"_index":85,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["deletemessage",{"_index":81,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["deletetitle",{"_index":79,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["demo",{"_index":245,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["dependencies",{"_index":222,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"dependencies.html":{}}}],["deploy",{"_index":441,"title":{},"body":{"changelog.html":{}}}],["deps",{"_index":240,"title":{},"body":{"changelog.html":{}}}],["description",{"_index":15,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["distribute",{"_index":608,"title":{},"body":{"license.html":{}}}],["documentation",{"_index":455,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["documentations",{"_index":582,"title":{},"body":{"index.html":{}}}],["dokku",{"_index":580,"title":{},"body":{"index.html":{}}}],["domsanitizer",{"_index":429,"title":{},"body":{"changelog.html":{}}}],["dotenv",{"_index":534,"title":{},"body":{"dependencies.html":{}}}],["dynamic",{"_index":489,"title":{},"body":{"dependencies.html":{}}}],["e10f983",{"_index":265,"title":{},"body":{"changelog.html":{}}}],["e3958e9",{"_index":305,"title":{},"body":{"changelog.html":{}}}],["e72db23",{"_index":241,"title":{},"body":{"changelog.html":{}}}],["engine",{"_index":504,"title":{},"body":{"dependencies.html":{}}}],["entities",{"_index":214,"title":{},"body":{"changelog.html":{}}}],["entities_providers",{"_index":464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment",{"_index":448,"title":{},"body":{"changelog.html":{}}}],["environments",{"_index":415,"title":{},"body":{"changelog.html":{}}}],["error",{"_index":420,"title":{},"body":{"changelog.html":{}}}],["errors",{"_index":277,"title":{},"body":{"changelog.html":{}}}],["event",{"_index":637,"title":{},"body":{"license.html":{}}}],["export",{"_index":114,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["express",{"_index":628,"title":{},"body":{"license.html":{}}}],["extends",{"_index":143,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["f0a57b9",{"_index":417,"title":{},"body":{"changelog.html":{}}}],["f125e12",{"_index":336,"title":{},"body":{"changelog.html":{}}}],["f290254",{"_index":402,"title":{},"body":{"changelog.html":{}}}],["f506fd7",{"_index":433,"title":{},"body":{"changelog.html":{}}}],["f9ffcba",{"_index":372,"title":{},"body":{"changelog.html":{}}}],["fd6062a",{"_index":291,"title":{},"body":{"changelog.html":{}}}],["fe034d7",{"_index":432,"title":{},"body":{"changelog.html":{}}}],["features",{"_index":239,"title":{},"body":{"changelog.html":{}}}],["fetch",{"_index":548,"title":{},"body":{"dependencies.html":{}}}],["ff1bc0b",{"_index":382,"title":{},"body":{"changelog.html":{}}}],["field",{"_index":218,"title":{},"body":{"changelog.html":{}}}],["file",{"_index":5,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"coverage.html":{}}}],["files",{"_index":304,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["filter",{"_index":425,"title":{},"body":{"changelog.html":{}}}],["fitness",{"_index":633,"title":{},"body":{"license.html":{}}}],["fix",{"_index":276,"title":{},"body":{"changelog.html":{}}}],["fixes",{"_index":203,"title":{},"body":{"changelog.html":{}}}],["folder",{"_index":215,"title":{},"body":{"changelog.html":{}}}],["folders",{"_index":263,"title":{},"body":{"changelog.html":{}}}],["following",{"_index":617,"title":{},"body":{"license.html":{}}}],["fontawesome",{"_index":493,"title":{},"body":{"dependencies.html":{}}}],["form",{"_index":542,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/angular",{"_index":492,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/fontawesome",{"_index":494,"title":{},"body":{"dependencies.html":{}}}],["fortawesome/free",{"_index":498,"title":{},"body":{"dependencies.html":{}}}],["frames",{"_index":357,"title":{},"body":{"changelog.html":{}}}],["free",{"_index":592,"title":{},"body":{"license.html":{}}}],["furnished",{"_index":615,"title":{},"body":{"license.html":{}}}],["generator",{"_index":362,"title":{},"body":{"changelog.html":{}}}],["getispublicasstring",{"_index":95,"title":{},"body":{"classes/Project.html":{}}}],["getrange",{"_index":182,"title":{},"body":{"classes/Task.html":{}}}],["getstatusesasstring",{"_index":99,"title":{},"body":{"classes/Project.html":{}}}],["getter",{"_index":346,"title":{},"body":{"changelog.html":{}}}],["getting",{"_index":195,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["getusersasstring",{"_index":97,"title":{},"body":{"classes/Project.html":{}}}],["gh",{"_index":450,"title":{},"body":{"changelog.html":{}}}],["git",{"_index":248,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["github",{"_index":574,"title":{},"body":{"index.html":{}}}],["granted",{"_index":591,"title":{},"body":{"license.html":{}}}],["grid",{"_index":296,"title":{},"body":{"changelog.html":{}}}],["grids",{"_index":208,"title":{},"body":{"changelog.html":{}}}],["guard",{"_index":317,"title":{},"body":{"changelog.html":{}}}],["hard",{"_index":449,"title":{},"body":{"changelog.html":{}}}],["hereby",{"_index":590,"title":{},"body":{"license.html":{}}}],["holders",{"_index":639,"title":{},"body":{"license.html":{}}}],["home",{"_index":316,"title":{},"body":{"changelog.html":{}}}],["html",{"_index":400,"title":{},"body":{"changelog.html":{}}}],["http",{"_index":321,"title":{},"body":{"changelog.html":{}}}],["httpclientmodule",{"_index":323,"title":{},"body":{"changelog.html":{}}}],["httpmodule",{"_index":322,"title":{},"body":{"changelog.html":{}}}],["https://github.com/rucken/todo.git",{"_index":566,"title":{},"body":{"index.html":{}}}],["https://rucken.github.io/todo",{"_index":572,"title":{},"body":{"index.html":{}}}],["https://rucken.github.io/todo/doc/demo",{"_index":583,"title":{},"body":{"index.html":{}}}],["https://rucken.github.io/todo/doc/todo",{"_index":584,"title":{},"body":{"index.html":{}}}],["https://todo.rucken.io",{"_index":576,"title":{},"body":{"index.html":{}}}],["icons",{"_index":500,"title":{},"body":{"dependencies.html":{}}}],["id",{"_index":16,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":369,"title":{},"body":{"changelog.html":{}}}],["imodel",{"_index":9,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["implements",{"_index":8,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["implied",{"_index":629,"title":{},"body":{"license.html":{}}}],["import",{"_index":101,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{}}}],["improvements",{"_index":268,"title":{},"body":{"changelog.html":{}}}],["include",{"_index":247,"title":{},"body":{"changelog.html":{}}}],["included",{"_index":622,"title":{},"body":{"license.html":{}}}],["including",{"_index":602,"title":{},"body":{"license.html":{}}}],["index",{"_index":10,"title":{"index.html":{}},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["index.ts",{"_index":371,"title":{},"body":{"changelog.html":{}}}],["info",{"_index":3,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["inherited",{"_index":147,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["init",{"_index":330,"title":{},"body":{"changelog.html":{}}}],["initroutes",{"_index":332,"title":{},"body":{"changelog.html":{}}}],["input",{"_index":375,"title":{},"body":{"changelog.html":{}}}],["inputs",{"_index":288,"title":{},"body":{"changelog.html":{}}}],["install",{"_index":569,"title":{},"body":{"index.html":{}}}],["io",{"_index":558,"title":{},"body":{"dependencies.html":{}}}],["irestprovideroptions",{"_index":662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["isnotempty",{"_index":88,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["isnotempty()@type(undefined)@transform(transformstringtoobject",{"_index":169,"title":{},"body":{"classes/Task.html":{}}}],["isoptional",{"_index":110,"title":{},"body":{"classes/Project.html":{}}}],["isoptional()@type(undefined",{"_index":57,"title":{},"body":{"classes/Project.html":{}}}],["ispublic",{"_index":17,"title":{},"body":{"classes/Project.html":{}}}],["ispublicasstring",{"_index":29,"title":{},"body":{"classes/Project.html":{}}}],["item",{"_index":278,"title":{},"body":{"changelog.html":{}}}],["items",{"_index":399,"title":{},"body":{"changelog.html":{}}}],["js",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["jsonwebtoken",{"_index":536,"title":{},"body":{"dependencies.html":{}}}],["kind",{"_index":627,"title":{},"body":{"license.html":{}}}],["language",{"_index":452,"title":{},"body":{"changelog.html":{}}}],["lazy",{"_index":411,"title":{},"body":{"changelog.html":{}}}],["length",{"_index":398,"title":{},"body":{"changelog.html":{}}}],["liability",{"_index":643,"title":{},"body":{"license.html":{}}}],["liable",{"_index":640,"title":{},"body":{"license.html":{}}}],["libs",{"_index":262,"title":{},"body":{"changelog.html":{}}}],["libs/.../index.ts",{"_index":660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../projects.config.ts",{"_index":657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../ru.i18n.ts",{"_index":661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../statuses.config.ts",{"_index":658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/.../tasks.config.ts",{"_index":659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["libs/rucken/todo",{"_index":6,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":585,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{}}}],["limitation",{"_index":603,"title":{},"body":{"license.html":{}}}],["limited",{"_index":630,"title":{},"body":{"license.html":{}}}],["limitqueryparam",{"_index":684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["links",{"_index":435,"title":{},"body":{"changelog.html":{}}}],["lint",{"_index":406,"title":{},"body":{"changelog.html":{}}}],["loader",{"_index":509,"title":{},"body":{"dependencies.html":{}}}],["luxon",{"_index":185,"title":{},"body":{"classes/Task.html":{},"dependencies.html":{}}}],["maked",{"_index":561,"title":{},"body":{"index.html":{}}}],["map",{"_index":507,"title":{},"body":{"dependencies.html":{}}}],["matching",{"_index":127,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["merchantability",{"_index":632,"title":{},"body":{"license.html":{}}}],["merge",{"_index":606,"title":{},"body":{"license.html":{}}}],["meta/core",{"_index":510,"title":{},"body":{"dependencies.html":{}}}],["method",{"_index":333,"title":{},"body":{"changelog.html":{}}}],["methods",{"_index":26,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["miscellaneous",{"_index":655,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":586,"title":{},"body":{"index.html":{},"license.html":{}}}],["mockapi",{"_index":446,"title":{},"body":{"changelog.html":{}}}],["modal",{"_index":209,"title":{},"body":{"changelog.html":{}}}],["modals",{"_index":275,"title":{},"body":{"changelog.html":{}}}],["model",{"_index":427,"title":{},"body":{"changelog.html":{}}}],["models",{"_index":213,"title":{},"body":{"changelog.html":{}}}],["modify",{"_index":605,"title":{},"body":{"license.html":{}}}],["modules",{"_index":373,"title":{"modules.html":{}},"body":{"changelog.html":{},"modules.html":{}}}],["move",{"_index":211,"title":{},"body":{"changelog.html":{}}}],["name",{"_index":130,"title":{},"body":{"classes/Status.html":{},"classes/StatusWithProject.html":{},"miscellaneous/variables.html":{}}}],["names",{"_index":254,"title":{},"body":{"changelog.html":{}}}],["navbar",{"_index":329,"title":{},"body":{"changelog.html":{}}}],["new",{"_index":74,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ngfactory",{"_index":508,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/express",{"_index":503,"title":{},"body":{"dependencies.html":{}}}],["nguniversal/module",{"_index":506,"title":{},"body":{"dependencies.html":{}}}],["ngx",{"_index":112,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{},"changelog.html":{},"dependencies.html":{}}}],["node",{"_index":547,"title":{},"body":{"dependencies.html":{}}}],["noninfringement",{"_index":636,"title":{},"body":{"license.html":{}}}],["notice",{"_index":620,"title":{},"body":{"license.html":{}}}],["npm",{"_index":568,"title":{},"body":{"index.html":{}}}],["null",{"_index":279,"title":{},"body":{"changelog.html":{}}}],["number",{"_index":34,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["object",{"_index":59,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["obtaining",{"_index":595,"title":{},"body":{"license.html":{}}}],["old",{"_index":303,"title":{},"body":{"changelog.html":{}}}],["open",{"_index":706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["openat",{"_index":160,"title":{},"body":{"classes/Task.html":{}}}],["optimizer",{"_index":388,"title":{},"body":{"changelog.html":{}}}],["options",{"_index":253,"title":{},"body":{"changelog.html":{}}}],["others",{"_index":297,"title":{},"body":{"changelog.html":{}}}],["otherwise",{"_index":648,"title":{},"body":{"license.html":{}}}],["out",{"_index":650,"title":{},"body":{"license.html":{}}}],["over",{"_index":410,"title":{},"body":{"changelog.html":{}}}],["overview",{"_index":653,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":479,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":319,"title":{},"body":{"changelog.html":{}}}],["pagequeryparam",{"_index":686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pages",{"_index":575,"title":{},"body":{"index.html":{}}}],["paginationmeta",{"_index":666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["parent",{"_index":216,"title":{},"body":{"changelog.html":{}}}],["particular",{"_index":634,"title":{},"body":{"license.html":{}}}],["path",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["per_page",{"_index":685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["performance",{"_index":267,"title":{},"body":{"changelog.html":{}}}],["permission",{"_index":589,"title":{},"body":{"license.html":{}}}],["permissions",{"_index":345,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["permit",{"_index":613,"title":{},"body":{"license.html":{}}}],["perpage",{"_index":667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":594,"title":{},"body":{"license.html":{}}}],["persons",{"_index":614,"title":{},"body":{"license.html":{}}}],["pipe",{"_index":431,"title":{},"body":{"changelog.html":{}}}],["pipesmodule",{"_index":354,"title":{},"body":{"changelog.html":{}}}],["plaintoclass(project",{"_index":675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintoclass(status",{"_index":691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plaintoclass(task",{"_index":695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pluralname",{"_index":663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portions",{"_index":624,"title":{},"body":{"license.html":{}}}],["prod",{"_index":445,"title":{},"body":{"changelog.html":{}}}],["project",{"_index":1,"title":{"classes/Project.html":{}},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["project.ts",{"_index":142,"title":{},"body":{"classes/StatusWithProject.html":{},"coverage.html":{}}}],["project.ts:14",{"_index":144,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["project.ts:7",{"_index":146,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["projects",{"_index":664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["projects_config_token",{"_index":467,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["projectsconfig",{"_index":690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["properties",{"_index":11,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["property",{"_index":423,"title":{},"body":{"changelog.html":{}}}],["provide",{"_index":700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":625,"title":{},"body":{"license.html":{}}}],["provider",{"_index":699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideractionenum",{"_index":672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideractionenum.delete",{"_index":673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideractionenum.loadall",{"_index":674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":64,"title":{},"body":{"classes/Project.html":{},"miscellaneous/variables.html":{}}}],["publish",{"_index":607,"title":{},"body":{"license.html":{}}}],["purpose",{"_index":635,"title":{},"body":{"license.html":{}}}],["q",{"_index":689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["range",{"_index":161,"title":{},"body":{"classes/Task.html":{},"changelog.html":{}}}],["raw",{"_index":551,"title":{},"body":{"dependencies.html":{}}}],["readonly",{"_index":422,"title":{},"body":{"changelog.html":{}}}],["really",{"_index":83,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["refactor",{"_index":306,"title":{},"body":{"changelog.html":{}}}],["remove",{"_index":293,"title":{},"body":{"changelog.html":{}}}],["rename",{"_index":261,"title":{},"body":{"changelog.html":{}}}],["rendering",{"_index":578,"title":{},"body":{"index.html":{}}}],["repository",{"_index":113,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{},"dependencies.html":{}}}],["responsedata",{"_index":670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["responsepaginationmeta",{"_index":679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restoptions",{"_index":683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["restriction",{"_index":601,"title":{},"body":{"license.html":{}}}],["result",{"_index":126,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["results",{"_index":128,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":120,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":94,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["rewrite",{"_index":256,"title":{},"body":{"changelog.html":{}}}],["rights",{"_index":604,"title":{},"body":{"license.html":{}}}],["route",{"_index":331,"title":{},"body":{"changelog.html":{}}}],["routes",{"_index":412,"title":{},"body":{"changelog.html":{}}}],["ru",{"_index":225,"title":{},"body":{"changelog.html":{}}}],["rucken",{"_index":381,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["rucken/core",{"_index":107,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"dependencies.html":{}}}],["rucken/web",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["rui18n",{"_index":460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":570,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":552,"title":{},"body":{"dependencies.html":{}}}],["safehtml",{"_index":430,"title":{},"body":{"changelog.html":{}}}],["scaffold",{"_index":384,"title":{},"body":{"changelog.html":{}}}],["scrips",{"_index":385,"title":{},"body":{"changelog.html":{}}}],["script",{"_index":393,"title":{},"body":{"changelog.html":{}}}],["scripts",{"_index":368,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":341,"title":{},"body":{"changelog.html":{}}}],["searchtextqueryparam",{"_index":688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["searchwithmockeditems",{"_index":340,"title":{},"body":{"changelog.html":{}}}],["select",{"_index":287,"title":{},"body":{"changelog.html":{}}}],["selected",{"_index":426,"title":{},"body":{"changelog.html":{}}}],["selects",{"_index":286,"title":{},"body":{"changelog.html":{}}}],["sell",{"_index":611,"title":{},"body":{"license.html":{}}}],["serializemodel",{"_index":102,"title":{},"body":{"classes/Project.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["server",{"_index":490,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["service",{"_index":541,"title":{},"body":{"dependencies.html":{}}}],["shall",{"_index":621,"title":{},"body":{"license.html":{}}}],["side",{"_index":577,"title":{},"body":{"index.html":{}}}],["site",{"_index":573,"title":{},"body":{"index.html":{}}}],["software",{"_index":597,"title":{},"body":{"license.html":{}}}],["solid",{"_index":502,"title":{},"body":{"dependencies.html":{}}}],["source",{"_index":4,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{}}}],["sources",{"_index":307,"title":{},"body":{"changelog.html":{}}}],["speed",{"_index":347,"title":{},"body":{"changelog.html":{}}}],["srcgen",{"_index":361,"title":{},"body":{"changelog.html":{}}}],["ssr",{"_index":282,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["start:prod",{"_index":571,"title":{},"body":{"index.html":{}}}],["started",{"_index":196,"title":{"changelog.html":{},"index.html":{},"license.html":{}},"body":{}}],["statements",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":19,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"index.html":{}}}],["status",{"_index":56,"title":{"classes/Status.html":{}},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["status.strings",{"_index":145,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:22",{"_index":149,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:25",{"_index":150,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:27",{"_index":152,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:31",{"_index":148,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:35",{"_index":153,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:37",{"_index":154,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["status:7",{"_index":151,"title":{},"body":{"classes/StatusWithProject.html":{}}}],["statuses",{"_index":18,"title":{},"body":{"classes/Project.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["statuses_config_token",{"_index":470,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["statusesasstring",{"_index":31,"title":{},"body":{"classes/Project.html":{}}}],["statusesconfig",{"_index":694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statuswithproject",{"_index":140,"title":{"classes/StatusWithProject.html":{}},"body":{"classes/StatusWithProject.html":{},"coverage.html":{}}}],["string",{"_index":41,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":20,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["structure",{"_index":363,"title":{},"body":{"changelog.html":{}}}],["styles",{"_index":292,"title":{},"body":{"changelog.html":{}}}],["sub",{"_index":207,"title":{},"body":{"changelog.html":{}}}],["subject",{"_index":616,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":609,"title":{},"body":{"license.html":{}}}],["submodule",{"_index":249,"title":{},"body":{"changelog.html":{}}}],["substantial",{"_index":623,"title":{},"body":{"license.html":{}}}],["support",{"_index":246,"title":{},"body":{"changelog.html":{}}}],["svg",{"_index":495,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":478,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":477,"title":{},"body":{"coverage.html":{}}}],["task",{"_index":156,"title":{"classes/Task.html":{}},"body":{"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasks",{"_index":68,"title":{},"body":{"classes/Project.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["tasks_config_token",{"_index":473,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["tasksconfig",{"_index":698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskscount",{"_index":21,"title":{},"body":{"classes/Project.html":{}}}],["template",{"_index":401,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["test",{"_index":394,"title":{},"body":{"changelog.html":{}}}],["text",{"_index":224,"title":{},"body":{"changelog.html":{}}}],["this.closeat",{"_index":189,"title":{},"body":{"classes/Task.html":{}}}],["this.ispublic",{"_index":119,"title":{},"body":{"classes/Project.html":{}}}],["this.openat",{"_index":188,"title":{},"body":{"classes/Task.html":{}}}],["this.statuses.join",{"_index":124,"title":{},"body":{"classes/Project.html":{}}}],["this.title",{"_index":125,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["this.users.join",{"_index":123,"title":{},"body":{"classes/Project.html":{}}}],["time",{"_index":175,"title":{},"body":{"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["title",{"_index":22,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toclassonly",{"_index":44,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["todo",{"_index":419,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["tolocalestring",{"_index":194,"title":{},"body":{"classes/Task.html":{}}}],["tooltipmodule",{"_index":376,"title":{},"body":{"changelog.html":{}}}],["toplainonly",{"_index":46,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["tort",{"_index":647,"title":{},"body":{"license.html":{}}}],["tostring",{"_index":27,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["totalresults",{"_index":680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":108,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["transform(transformdatetostring",{"_index":115,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["transform(transformstringtodate",{"_index":43,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["transform(transformstringtoobject",{"_index":118,"title":{},"body":{"classes/Project.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["transformdatetostring",{"_index":103,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["transformer",{"_index":109,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["transformstringtodate",{"_index":104,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["transformstringtoobject",{"_index":105,"title":{},"body":{"classes/Project.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate",{"_index":106,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{}}}],["translate('add",{"_index":73,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('assigned",{"_index":176,"title":{},"body":{"classes/Task.html":{}}}],["translate('close",{"_index":173,"title":{},"body":{"classes/Task.html":{}}}],["translate('completed",{"_index":71,"title":{},"body":{"classes/Project.html":{}}}],["translate('created",{"_index":65,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('delete",{"_index":80,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('description",{"_index":62,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["translate('do",{"_index":82,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('id",{"_index":60,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('is",{"_index":63,"title":{},"body":{"classes/Project.html":{}}}],["translate('name",{"_index":134,"title":{},"body":{"classes/Status.html":{},"classes/StatusWithProject.html":{}}}],["translate('no",{"_index":122,"title":{},"body":{"classes/Project.html":{}}}],["translate('open",{"_index":172,"title":{},"body":{"classes/Task.html":{}}}],["translate('project",{"_index":76,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('status",{"_index":135,"title":{},"body":{"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('statuses",{"_index":67,"title":{},"body":{"classes/Project.html":{}}}],["translate('task",{"_index":174,"title":{},"body":{"classes/Task.html":{}}}],["translate('tasks",{"_index":69,"title":{},"body":{"classes/Project.html":{}}}],["translate('title",{"_index":61,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('update",{"_index":78,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('updated",{"_index":66,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["translate('users",{"_index":70,"title":{},"body":{"classes/Project.html":{}}}],["translate('yes",{"_index":121,"title":{},"body":{"classes/Project.html":{}}}],["translate/core",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["translates",{"_index":230,"title":{},"body":{"changelog.html":{}}}],["true",{"_index":47,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["true})@transform(transformdatetostring",{"_index":45,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["ts",{"_index":554,"title":{},"body":{"dependencies.html":{}}}],["tsconfig",{"_index":302,"title":{},"body":{"changelog.html":{}}}],["type",{"_index":32,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["type(serializemodel(project",{"_index":155,"title":{},"body":{"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["type(serializemodel(status",{"_index":116,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["type(serializemodel(user",{"_index":117,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["type(undefined)@transform(transformstringtoobject",{"_index":50,"title":{},"body":{"classes/Project.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["typeof",{"_index":191,"title":{},"body":{"classes/Task.html":{}}}],["types/dotenv",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["types/jsonwebtoken",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["types/luxon",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["types/node",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["types/object",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["ui",{"_index":349,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["undefined",{"_index":37,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":348,"title":{},"body":{"changelog.html":{}}}],["update",{"_index":221,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["updated",{"_index":703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["updatedat",{"_index":23,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["updateduser",{"_index":24,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{}}}],["updatetitle",{"_index":77,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["url",{"_index":447,"title":{},"body":{"changelog.html":{}}}],["urls",{"_index":444,"title":{},"body":{"changelog.html":{}}}],["usage",{"_index":564,"title":{},"body":{"index.html":{}}}],["use",{"_index":421,"title":{},"body":{"changelog.html":{},"license.html":{}}}],["user",{"_index":49,"title":{},"body":{"classes/Project.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":25,"title":{},"body":{"classes/Project.html":{},"miscellaneous/variables.html":{}}}],["usersasstring",{"_index":30,"title":{},"body":{"classes/Project.html":{}}}],["usevalue",{"_index":701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validator",{"_index":111,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/Task.html":{}}}],["value",{"_index":36,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":656,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":380,"title":{},"body":{"changelog.html":{}}}],["viewtitle",{"_index":75,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{}}}],["vps",{"_index":579,"title":{},"body":{"index.html":{}}}],["want",{"_index":84,"title":{},"body":{"classes/Project.html":{},"classes/Status.html":{},"classes/StatusWithProject.html":{},"classes/Task.html":{},"miscellaneous/variables.html":{}}}],["warranties",{"_index":631,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":626,"title":{},"body":{"license.html":{}}}],["web",{"_index":356,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["whether",{"_index":644,"title":{},"body":{"license.html":{}}}],["without",{"_index":600,"title":{},"body":{"license.html":{}}}],["work",{"_index":409,"title":{},"body":{"changelog.html":{}}}],["yes",{"_index":705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["zone.js",{"_index":556,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Project.html":{"url":"classes/Project.html","title":"class - Project","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Project\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rucken/todo-core/src/lib/models/project.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                completedTasksCount\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdUser\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                isPublic\n                            \n                            \n                                statuses\n                            \n                            \n                                    Static\n                                strings\n                            \n                            \n                                tasksCount\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedUser\n                            \n                            \n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    isPublicAsString\n                                \n                                \n                                    usersAsString\n                                \n                                \n                                    statusesAsString\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            completedTasksCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isPublic\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         boolean\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            statuses\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Status[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            strings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: translate('Id'),\n    title: translate('Title'),\n    description: translate('Description'),\n    isPublic: translate('Is public'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n    statuses: translate('Statuses'),\n    tasks: translate('Tasks'),\n    users: translate('Users'),\n    completedTasksCount: translate('Completed tasks'),\n    tasksCount: translate('Tasks'),\n\n    createTitle: translate('Add new project'),\n    viewTitle: translate('Project #{{id}}'),\n    updateTitle: translate('Update project #{{id}}'),\n    deleteTitle: translate('Delete project #{{id}}'),\n    deleteMessage: translate('Do you really want to delete project?')\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tasksCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            users\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsOptional()@Type(undefined)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:62\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:88\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        isPublicAsString\n                    \n                \n\n                \n                    \n                        getisPublicAsString()\n                    \n                \n                            \n                                \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:72\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        usersAsString\n                    \n                \n\n                \n                    \n                        getusersAsString()\n                    \n                \n                            \n                                \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:80\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        statusesAsString\n                    \n                \n\n                \n                    \n                        getstatusesAsString()\n                    \n                \n                            \n                                \n                                    Defined in libs/rucken/todo-core/src/lib/models/project.ts:84\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  serializeModel,\n  transformDateToString,\n  transformStringToDate,\n  transformStringToObject,\n  translate,\n  User\n} from '@rucken/core';\nimport { Transform, Type } from 'class-transformer';\nimport { IsNotEmpty, IsOptional } from 'class-validator';\nimport { IModel } from 'ngx-repository';\nimport { Status } from './status';\n\nexport class Project implements IModel {\n  static strings = {\n    id: translate('Id'),\n    title: translate('Title'),\n    description: translate('Description'),\n    isPublic: translate('Is public'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n    statuses: translate('Statuses'),\n    tasks: translate('Tasks'),\n    users: translate('Users'),\n    completedTasksCount: translate('Completed tasks'),\n    tasksCount: translate('Tasks'),\n\n    createTitle: translate('Add new project'),\n    viewTitle: translate('Project #{{id}}'),\n    updateTitle: translate('Update project #{{id}}'),\n    deleteTitle: translate('Delete project #{{id}}'),\n    deleteMessage: translate('Do you really want to delete project?')\n  };\n\n  id: number = undefined;\n\n  completedTasksCount: number = undefined;\n\n  tasksCount: number = undefined;\n\n  @IsNotEmpty()\n  title: string = undefined;\n\n  description: string = undefined;\n\n  isPublic: boolean = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  createdAt: Date | string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  updatedAt: Date | string = undefined;\n\n  @IsOptional()\n  @Type(serializeModel(Status))\n  statuses: Status[] = [];\n\n  @IsOptional()\n  @Type(serializeModel(User))\n  users: User[] = [];\n\n  @Type(serializeModel(User))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  createdUser: User = undefined;\n\n  @Type(serializeModel(User))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  updatedUser: User = undefined;\n\n  get isPublicAsString() {\n    if (this.isPublic) {\n      return translate('Yes');\n    } else {\n      return translate('No');\n    }\n  }\n\n  get usersAsString() {\n    return this.users.join(', ');\n  }\n\n  get statusesAsString() {\n    return this.statuses.join(', ');\n  }\n\n  toString() {\n    return this.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Status.html":{"url":"classes/Status.html","title":"class - Status","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Status\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rucken/todo-core/src/lib/models/status.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                strings\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            strings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: translate('Id'),\n    name: translate('Name'),\n    title: translate('Title'),\n    project: translate('Project'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n\n    createTitle: translate('Add new status'),\n    viewTitle: translate('Status #{{id}}'),\n    updateTitle: translate('Update status #{{id}}'),\n    deleteTitle: translate('Delete status #{{id}}'),\n    deleteMessage: translate('Do you really want to delete status?')\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:35\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in libs/rucken/todo-core/src/lib/models/status.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { transformDateToString, transformStringToDate, translate } from '@rucken/core';\nimport { Transform } from 'class-transformer';\nimport { IsNotEmpty } from 'class-validator';\nimport { IModel } from 'ngx-repository';\n\nexport class Status implements IModel {\n  static strings = {\n    id: translate('Id'),\n    name: translate('Name'),\n    title: translate('Title'),\n    project: translate('Project'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n\n    createTitle: translate('Add new status'),\n    viewTitle: translate('Status #{{id}}'),\n    updateTitle: translate('Update status #{{id}}'),\n    deleteTitle: translate('Delete status #{{id}}'),\n    deleteMessage: translate('Do you really want to delete status?')\n  };\n\n  id: number = undefined;\n\n  @IsNotEmpty()\n  name: string = undefined;\n\n  title: string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  createdAt: Date | string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  updatedAt: Date | string = undefined;\n\n  toString() {\n    return this.title;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/StatusWithProject.html":{"url":"classes/StatusWithProject.html","title":"class - StatusWithProject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  StatusWithProject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rucken/todo-core/src/lib/models/status-with-project.ts\n        \n\n\n            \n                Extends\n            \n            \n                        Status\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                project\n                            \n                            \n                                    Static\n                                strings\n                            \n                            \n                                createdAt\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                    Static\n                                strings\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status-with-project.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            strings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         any\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    ...Status.strings,\n    project: translate('Project')\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/status-with-project.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:31\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:22\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:25\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            strings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: translate('Id'),\n    name: translate('Name'),\n    title: translate('Title'),\n    project: translate('Project'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n\n    createTitle: translate('Add new status'),\n    viewTitle: translate('Status #{{id}}'),\n    updateTitle: translate('Update status #{{id}}'),\n    deleteTitle: translate('Delete status #{{id}}'),\n    deleteMessage: translate('Do you really want to delete status?')\n  }\n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:7\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:27\n\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from         Status\n\n                                \n                            \n                        \n                            \n                                    Defined in         Status:35\n\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Inherited from         Status\n\n                \n            \n            \n                \n                        Defined in         Status:37\n\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { serializeModel, transformStringToObject, translate } from '@rucken/core';\nimport { Transform, Type } from 'class-transformer';\nimport { Project } from './project';\nimport { Status } from './status';\n\nexport class StatusWithProject extends Status {\n  static strings: any = {\n    ...Status.strings,\n    project: translate('Project')\n  };\n\n  @Type(serializeModel(Project))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  project: Project = undefined;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Task.html":{"url":"classes/Task.html","title":"class - Task","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Task\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            libs/rucken/todo-core/src/lib/models/task.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        IModel\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                assignedUser\n                            \n                            \n                                closeAt\n                            \n                            \n                                createdAt\n                            \n                            \n                                createdUser\n                            \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                openAt\n                            \n                            \n                                project\n                            \n                            \n                                status\n                            \n                            \n                                    Static\n                                strings\n                            \n                            \n                                title\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                toString\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    range\n                                \n                            \n                        \n                    \n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            assignedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:82\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            closeAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:62\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:66\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createdUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:74\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            description\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            openAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:58\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            project\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Project\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:44\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            status\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Status\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()@Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            strings\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: translate('Id'),\n    project: translate('Project'),\n    title: translate('Title'),\n    description: translate('Description'),\n    status: translate('Status'),\n    openAt: translate('Open at'),\n    closeAt: translate('Close at'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n    range: translate('Task time'),\n    createdUser: translate('Created user'),\n    updatedUser: translate('Updated user'),\n    assignedUser: translate('Assigned user'),\n\n    createTitle: translate('Add new task'),\n    viewTitle: translate('Task #{{id}}'),\n    updateTitle: translate('Update task #{{id}}'),\n    deleteTitle: translate('Delete task #{{id}}'),\n    deleteMessage: translate('Do you really want to delete task?')\n  }\n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @IsNotEmpty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedAt\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Date | string\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Transform(transformStringToDate, {toClassOnly: true})@Transform(transformDateToString, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:70\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updatedUser\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     User\n\n                        \n                    \n                    \n                        \n                            Default value : undefined\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Type(undefined)@Transform(transformStringToObject, {toPlainOnly: true})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:78\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            toString\n                        \n                        \n                    \n                \n            \n            \n                \ntoString()\n                \n            \n\n\n            \n                \n                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        range\n                    \n                \n\n                \n                    \n                        getrange()\n                    \n                \n                            \n                                \n                                    Defined in libs/rucken/todo-core/src/lib/models/task.ts:88\n                                \n                            \n\n            \n        \n\n    \n\n\n    \n        import {\n  serializeModel,\n  transformDateToString,\n  transformStringToDate,\n  transformStringToObject,\n  translate,\n  User\n} from '@rucken/core';\nimport { Transform, Type } from 'class-transformer';\nimport { IsNotEmpty } from 'class-validator';\nimport { DateTime } from 'luxon';\nimport { IModel } from 'ngx-repository';\nimport { Project } from './project';\nimport { Status } from './status';\n\nexport class Task implements IModel {\n  static strings = {\n    id: translate('Id'),\n    project: translate('Project'),\n    title: translate('Title'),\n    description: translate('Description'),\n    status: translate('Status'),\n    openAt: translate('Open at'),\n    closeAt: translate('Close at'),\n    createdAt: translate('Created at'),\n    updatedAt: translate('Updated at'),\n    range: translate('Task time'),\n    createdUser: translate('Created user'),\n    updatedUser: translate('Updated user'),\n    assignedUser: translate('Assigned user'),\n\n    createTitle: translate('Add new task'),\n    viewTitle: translate('Task #{{id}}'),\n    updateTitle: translate('Update task #{{id}}'),\n    deleteTitle: translate('Delete task #{{id}}'),\n    deleteMessage: translate('Do you really want to delete task?')\n  };\n\n  id: number = undefined;\n\n  @IsNotEmpty()\n  @Type(serializeModel(Project))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  project: Project = undefined;\n\n  @IsNotEmpty()\n  title: string = undefined;\n\n  description: string = undefined;\n\n  @IsNotEmpty()\n  @Type(serializeModel(Status))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  status: Status = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  openAt: Date | string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  closeAt: Date | string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  createdAt: Date | string = undefined;\n\n  @Transform(transformStringToDate, { toClassOnly: true })\n  @Transform(transformDateToString, { toPlainOnly: true })\n  updatedAt: Date | string = undefined;\n\n  @Type(serializeModel(User))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  createdUser: User = undefined;\n\n  @Type(serializeModel(User))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  updatedUser: User = undefined;\n\n  @Type(serializeModel(User))\n  @Transform(transformStringToObject, { toPlainOnly: true })\n  assignedUser: User = undefined;\n\n  toString() {\n    return this.title;\n  }\n\n  get range() {\n    const arr: string[] = [];\n    if (this.openAt) {\n      if (!this.closeAt) {\n        arr.push(' >= ');\n      }\n      arr.push(\n        (typeof this.openAt === 'string'\n          ? DateTime.fromISO(String(this.openAt))\n          : DateTime.fromJSDate(this.openAt as Date)\n        ).toLocaleString()\n      );\n    }\n    if (this.openAt && this.closeAt) {\n      arr.push(' - ');\n    }\n    if (this.closeAt) {\n      if (!this.openAt) {\n        arr.push(' \n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n3.0.2 (2019-03-10)\nBug Fixes\n\nAdd check to undefined (2dae41f)\nAdd title on sub grids for project modal (1acf96b)\nMove configs and models from entities folder to parent (688bb7a)\nTo all Date field add alternative type \"Date | string\" (5ba6971)\nUpdate dependencies (daf1b45)\nUpdate text and ru translate range => task time (#176))\n\n3.0.1 (2019-03-06)\nBug Fixes\n\nUpdate dependencies (9cb1082)\nUpdate translates (0394bcc)\n\n3.0.0 (2019-03-02)\nBug Fixes\n\nUpdate dependencies and source for it (8eef549)\n\n2.2.0 (2018-11-17)\nFeatures\n\ndeps: Update dependencies (e72db23)\n\n\n2.1.0 (2018-09-27)\nBug Fixes\n\ndemo: Support include project as git submodule to backend (7ecd3f3)\nchange modal options names (b2c8cf0)\n\nFeatures\n\nRewrite all project (951fc8c)\n\n\n2.0.1 (2018-05-16)\nBug Fixes\n\nrename: Rename libs folders (9cb0c6a)\nrename: Rename libs names (e10f983)\n\n\n2.0.0 (2018-05-16)\nPerformance Improvements\n\nRewrite all project (3d5dc7c)\n\n\n0.5.1 (2018-01-29)\nBug Fixes\n\ndeps: Update dependencies (451d4dc)\n\n\n0.5.0 (2018-01-27)\nBug Fixes\n\nmodals: Fix errors on get item from null array (a989aa0)\n\nFeatures\n\nssr: Update dependencies and add support SSR (6ce4333)\n\n\n0.4.1 (2018-01-12)\nBug Fixes\n\nselects: Change select grids inputs for new ngx-bootstrap components (fd6062a)\nstyles: Remove custom styles like \"app-grid-....\" and others (8b85b95)\n\n\n0.4.0 (2017-12-14)\nBug Fixes\n\ntsconfig: Return old tsconfig files for libs (e3958e9)\n\nFeatures\n\nrefactor: Update dependencies and refactor sources for it (32cc0ca)\n\n\n0.3.1 (2017-12-07)\nBug Fixes\n\ndeps: Update dependencies for Angular 5.1.0 (ad58510)\n\n\n0.3.0 (2017-11-20)\nBug Fixes\n\nhome-guard: Allow home page (3377e7c)\n\nFeatures\n\nhttp: Change HttpModule to HttpClientModule (c32a9e5)\nupdate: Update dependencies and all sources for Angular 5.0.2 (8adbe04)\n\n\n0.2.5 (2017-11-13)\nBug Fixes\n\nnavbar: Move init route to initRoutes method (b5dc067)\n\nFeatures\n\nUpdate dependencies and refactor code for it (f125e12)\n\n\n0.2.4 (2017-10-30)\nBug Fixes\n\ngrids: Add call searchWithMockedItems in search method (2cd33ba)\n\n\n0.2.3 (2017-10-28)\nBug Fixes\n\npermissions: Move check permissions from getter to value, for speed up ui (b8f7c88)\n\n\n0.2.2 (2017-10-23)\n\n0.2.1 (2017-10-20)\nBug Fixes\n\nhome-page: Add PipesModule (2a4e754)\nweb: Update and add guard to frames (a850406)\n\n\n0.2.0 (2017-10-15)\nBug Fixes\n\nsrcgen: Update grid files generator for new folders structure (886b928)\n\nFeatures\n\nrefactor: Update and change files and folders (b0cb981)\n\n\n0.1.10 (2017-10-13)\nBug Fixes\n\ndeps: Update dependencies (306b1dc)\nscripts: Add ignore AppModule from index.ts (f9ffcba)\nscripts: Add modules to index.ts (92e88dd)\nselect-input: Fix import TooltipModule (38e751b)\n\n\n0.1.9 (2017-10-04)\nBug Fixes\n\ndeps: Update dependencies and refactor code for new version of rucken (ff1bc0b)\n\n\n0.1.8 (2017-10-01)\nBug Fixes\n\ndeps: Update dependencies and fix code for new @rucken)\nscaffold: Update scaffold scrips (78187d5)\nscripts: Add --build-optimizer to app-build command (b2c98ef)\n\n\n0.1.7 (2017-09-19)\nBug Fixes\n\nscript: Fix test script (2df26d9)\n\n\n0.1.6 (2017-09-19)\nBug Fixes\n\nAoT: Add check length of items on html template (f290254)\nAoT: Remove attribute from method in html template (dbcc081)\ndeps: Update dependencies and change code for it (cc8b3bf)\nlint: Fix errors (6b489b6)\n\nFeatures\n\nAoT: Update for correct work with AoT over lazy routes (7f3f666)\n\n\n0.1.5 (2017-09-07)\n\nUpdate scripts and environments\n\n\n0.1.4 (2017-09-06)\nBug Fixes\n\ndeps: Add all dependencies from rucken (f0a57b9)\ndeps: Update dependencies and change code for it (53ae546)\ntodo-user-grid: Error with use readonly property (9cc33b0)\nAdd filter by selected project in todo-change model (ab3f64f)\nChange todo-change model and change DomSanitizer to safeHtml pipe (fe034d7)\nRefactor for new version of rucken (f506fd7)\nRemove circular links (9df5cd7)\nUpdate all links for models, change use method for statuses and tasks (293b49d)\nUpdate dependencies and fix all sources for it (d6fc719)\n\n\n0.1.3 (2017-07-04)\nBug Fixes\n\ndeps: Update dependencies and change code for it (53ae546)\n\n\n0.1.2 (2017-06-29)\nBug Fixes\n\ndeploy: Update scripts\n\n\n0.1.1 (2017-06-29)\nBug Fixes\n\ndeps: Update deps\n\n\n0.1.0 (2017-05-28)\nBug Fixes\n\nurls: Fix prod mockapi url in environment and add hard url to gh-page demo page on deploy (a3b781a)\n\nFeatures\n\nnavbar: Add language item on navbar (518ab9b)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                libs/rucken/todo-core/src/i18n/ru.i18n.ts\n            \n            variable\n            RuI18n\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/index.ts\n            \n            variable\n            ENTITIES_PROVIDERS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/projects.config.ts\n            \n            variable\n            DEFAULT_PROJECTS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/projects.config.ts\n            \n            variable\n            PROJECTS_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/statuses.config.ts\n            \n            variable\n            DEFAULT_STATUSES_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/statuses.config.ts\n            \n            variable\n            STATUSES_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/tasks.config.ts\n            \n            variable\n            DEFAULT_TASKS_CONFIG\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/configs/tasks.config.ts\n            \n            variable\n            TASKS_CONFIG_TOKEN\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/models/project.ts\n            \n            class\n            Project\n            \n                0 %\n                (0/15)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/models/status-with-project.ts\n            \n            class\n            StatusWithProject\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/models/status.ts\n            \n            class\n            Status\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                libs/rucken/todo-core/src/lib/models/task.ts\n            \n            class\n            Task\n            \n                0 %\n                (0/15)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^7.2.8\n        \n            @angular/common : ^7.2.8\n        \n            @angular/compiler : ^7.2.8\n        \n            @angular/core : ^7.2.8\n        \n            @angular/forms : ^7.2.8\n        \n            @angular/http : ^7.2.8\n        \n            @angular/platform-browser : ^7.2.8\n        \n            @angular/platform-browser-dynamic : ^7.2.8\n        \n            @angular/platform-server : ^7.2.8\n        \n            @angular/router : ^7.2.8\n        \n            @fortawesome/angular-fontawesome : ^0.3.0\n        \n            @fortawesome/fontawesome-svg-core : ^1.2.15\n        \n            @fortawesome/free-brands-svg-icons : ^5.7.2\n        \n            @fortawesome/free-solid-svg-icons : ^5.7.2\n        \n            @nguniversal/express-engine : ^7.1.1\n        \n            @nguniversal/module-map-ngfactory-loader : ^7.1.1\n        \n            @ngx-meta/core : ^7.0.0\n        \n            @ngx-translate/core : ^11.0.1\n        \n            @rucken/core : ^3.9.8\n        \n            @rucken/web : ^3.9.8\n        \n            @types/dotenv : ^6.1.0\n        \n            @types/jsonwebtoken : ^8.3.0\n        \n            @types/luxon : ^1.11.1\n        \n            @types/node : ^10.12.18\n        \n            @types/object-path : ^0.11.0\n        \n            bind-observable : ^1.0.2\n        \n            core-js : ^2.6.5\n        \n            cors : ~2.8.5\n        \n            dotenv : ^6.2.0\n        \n            jsonwebtoken : ^8.4.0\n        \n            luxon : ^1.11.3\n        \n            ngx-bootstrap : ^3.2.0\n        \n            ngx-cookie-service : ^2.1.0\n        \n            ngx-dynamic-form-builder : ^0.9.0\n        \n            ngx-permissions : ^6.0.5\n        \n            ngx-repository : ^0.6.3\n        \n            node-fetch : ^2.3.0\n        \n            object-path : ^0.11.4\n        \n            raw-loader : ^0.5.1\n        \n            rxjs : ^6.4.0\n        \n            ts-loader : 5.3.3\n        \n            zone.js : ^0.8.29\n        \n            ngx-bind-io : ^0.6.5\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nrucken-todo\n\n\n\n\n\nCore with UI for web todo application maked on Angular7+ based on Rucken template\nUsage\ngit clone https://github.com/rucken/todo.git my-app\ncd my-app\nnpm install\nnpm run start:prod\nDemo\nhttps://rucken.github.io/todo/ - Static site on GitHub Pages\nhttps://todo.rucken.io - Server-side rendering (SSR) on VPS with Dokku\nCompodoc documentations\nhttps://rucken.github.io/todo/doc/demo - Demo application documentation\nhttps://rucken.github.io/todo/doc/todo-core - Core documentation\nhttps://rucken.github.io/todo/doc/todo-web - Web documentation\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nThe MIT License (MIT)\nCopyright (c) 2017 \nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    4 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            DEFAULT_PROJECTS_CONFIG   (libs/.../projects.config.ts)\n                        \n                        \n                            DEFAULT_STATUSES_CONFIG   (libs/.../statuses.config.ts)\n                        \n                        \n                            DEFAULT_TASKS_CONFIG   (libs/.../tasks.config.ts)\n                        \n                        \n                            ENTITIES_PROVIDERS   (libs/.../index.ts)\n                        \n                        \n                            PROJECTS_CONFIG_TOKEN   (libs/.../projects.config.ts)\n                        \n                        \n                            RuI18n   (libs/.../ru.i18n.ts)\n                        \n                        \n                            STATUSES_CONFIG_TOKEN   (libs/.../statuses.config.ts)\n                        \n                        \n                            TASKS_CONFIG_TOKEN   (libs/.../tasks.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    libs/rucken/todo-core/src/lib/configs/projects.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_PROJECTS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IRestProviderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'project',\n  pluralName: 'projects',\n  autoload: true,\n  paginationMeta: {\n    perPage: 5\n  },\n  actionOptions: {\n    responseData: (data: any, action: ProviderActionEnum) => {\n      if (action === ProviderActionEnum.Delete) {\n        return true;\n      } else {\n        if (action === ProviderActionEnum.LoadAll) {\n          return plainToClass(Project, data && data.body && data.body.projects);\n        } else {\n          return plainToClass(Project, data && data.body && data.body.project);\n        }\n      }\n    },\n    responsePaginationMeta: (data: any, action: ProviderActionEnum): PaginationMeta => {\n      return { totalResults: data && data.body && data.body.meta && data.body.meta.totalResults, perPage: undefined };\n    }\n  },\n  restOptions: {\n    limitQueryParam: 'per_page',\n    pageQueryParam: 'cur_page',\n    searchTextQueryParam: 'q'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PROJECTS_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'ProjectsConfig'\n                        \n                    \n\n\n            \n        \n\n    libs/rucken/todo-core/src/lib/configs/statuses.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_STATUSES_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IRestProviderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'status',\n  pluralName: 'statuses',\n  autoload: true,\n  paginationMeta: {\n    perPage: 5\n  },\n  actionOptions: {\n    responseData: (data: any, action: ProviderActionEnum) => {\n      if (action === ProviderActionEnum.Delete) {\n        return true;\n      } else {\n        if (action === ProviderActionEnum.LoadAll) {\n          return plainToClass(Status, data && data.body && data.body.statuses);\n        } else {\n          return plainToClass(Status, data && data.body && data.body.status);\n        }\n      }\n    },\n    responsePaginationMeta: (data: any, action: ProviderActionEnum): PaginationMeta => {\n      return { totalResults: data && data.body && data.body.meta && data.body.meta.totalResults, perPage: undefined };\n    }\n  },\n  restOptions: {\n    limitQueryParam: 'per_page',\n    pageQueryParam: 'cur_page',\n    searchTextQueryParam: 'q'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            STATUSES_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'StatusesConfig'\n                        \n                    \n\n\n            \n        \n\n    libs/rucken/todo-core/src/lib/configs/tasks.config.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            DEFAULT_TASKS_CONFIG\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         IRestProviderOptions\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  name: 'task',\n  pluralName: 'tasks',\n  autoload: true,\n  paginationMeta: {\n    perPage: 5\n  },\n  actionOptions: {\n    responseData: (data: any, action: ProviderActionEnum) => {\n      if (action === ProviderActionEnum.Delete) {\n        return true;\n      } else {\n        if (action === ProviderActionEnum.LoadAll) {\n          return plainToClass(Task, data && data.body && data.body.tasks);\n        } else {\n          return plainToClass(Task, data && data.body && data.body.task);\n        }\n      }\n    },\n    responsePaginationMeta: (data: any, action: ProviderActionEnum): PaginationMeta => {\n      return { totalResults: data && data.body && data.body.meta && data.body.meta.totalResults, perPage: undefined };\n    }\n  },\n  restOptions: {\n    limitQueryParam: 'per_page',\n    pageQueryParam: 'cur_page',\n    searchTextQueryParam: 'q'\n  }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            TASKS_CONFIG_TOKEN\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'TasksConfig'\n                        \n                    \n\n\n            \n        \n\n    libs/rucken/todo-core/src/lib/configs/index.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ENTITIES_PROVIDERS\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Provider[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    provide: PROJECTS_CONFIG_TOKEN,\n    useValue: DEFAULT_PROJECTS_CONFIG\n  },\n  {\n    provide: STATUSES_CONFIG_TOKEN,\n    useValue: DEFAULT_STATUSES_CONFIG\n  },\n  {\n    provide: TASKS_CONFIG_TOKEN,\n    useValue: DEFAULT_TASKS_CONFIG\n  }\n]\n                        \n                    \n\n\n            \n        \n\n    libs/rucken/todo-core/src/i18n/ru.i18n.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            RuI18n\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  Id: 'Ид.',\n  Title: 'Заголовок',\n  Description: 'Описание',\n  'Is public': 'Публичный',\n  'Created at': 'Дата создания',\n  'Updated at': 'Дата изменения',\n  Statuses: 'Статусы',\n  Tasks: 'Задачи',\n  Users: 'Пользователи',\n  'Completed tasks': 'Выполненные задачи',\n  'Add new project': 'Добавить проект',\n  'Project #{{id}}': 'Проекта #{{id}}',\n  'Update project #{{id}}': 'Редактирование проекта #{{id}}',\n  'Delete project #{{id}}': 'Удалить проект  #{{id}}',\n  'Do you really want to delete project?': 'Вы действительно хотите удалить этот проект?',\n  Yes: 'Да',\n  No: 'Нет',\n  Project: 'Проект',\n  Name: 'Наименование',\n  'Add new status': 'Создание нового статуса',\n  'Status #{{id}}': 'Статус #{{id}}',\n  'Update status #{{id}}': 'Изменить статус #{{id}}',\n  'Delete status #{{id}}': 'Удалить статус  #{{id}}',\n  'Do you really want to delete status?': 'Вы действительно хотите удалить статус?',\n  Status: 'Статус',\n  'Open at': 'Дата открытия',\n  'Close at': 'Дата закрытия',\n  'Task time': 'Диапазон',\n  'Created user': 'Создал',\n  'Updated user': 'Обновил',\n  'Assigned user': 'Пользователь',\n  'Add new task': 'Создание новой задачи',\n  'Task #{{id}}': 'Задача #{{id}}',\n  'Update task #{{id}}': 'Изменить задачу  #{{id}}',\n  'Delete task #{{id}}': 'Удалить задачу  #{{id}}',\n  'Do you really want to delete task?': 'Вы действительно хотите удалить задачу?'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
